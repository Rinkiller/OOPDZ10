# –°–æ–∑–¥–∞–π—Ç–µ —Ç—Ä–∏ (–∏–ª–∏ –±–æ–ª–µ–µ) –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤ –∂–∏–≤–æ—Ç–Ω—ã—Ö.
# –ù–∞–ø—Ä–∏–º–µ—Ä —Ä—ã–±—ã, –ø—Ç–∏—Ü—ã –∏ —Ç.–ø.
# –£ –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–∞–∫ –æ–±—â–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞,
# –Ω–∞–ø—Ä–∏–º–µ—Ä –∏–º—è, —Ç–∞–∫ –∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –∫–ª–∞—Å—Å–∞.
# –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞ —Å–æ–∑–¥–∞–π—Ç–µ –º–µ—Ç–æ–¥, –≤—ã–≤–æ–¥—è—â–∏–π
# –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞.

class Animal:
    name:str
    weigth:int
    age:int
    def __init__(self , name:str = None, weigth:int = 0, age:int = 0) -> None:
        self.name = name
        self.weigth = weigth
        self.age = age
    def get_spicific_atributes_of_class(self) -> str:
        print(f'–°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏: ')

class Fish(Animal):
    freshwater:bool
    cartilaginous_fish:bool
    scales:bool
    def __init__(self , name:str , weigth:int , age:int , freshwater:bool = True , cartilaginous_fish:bool = True , scales:bool = True ) -> None:
        self.freshwater = freshwater        # –ø—Ä–µ—Å–Ω–æ–≤–æ–¥–Ω–∞—è
        self.cartilaginous_fish = cartilaginous_fish    # —Ö—Ä—è—â–µ–≤–∞—è —Ä—ã–±–∞  (bone fish)
        self.scales = scales    # —á–µ—à—É—è 
        super().__init__( name , weigth , age)
    def get_spicific_atributes_of_class(self) -> str:
        return f'{self.freshwater = } , {self.cartilaginous_fish = } , {self.scales = }'
    

class Birds(Animal):
    warm_blooded = True     # —Ç–µ–ø–ª–æ–∫—Ä–æ–≤–Ω–æ–µ
    plumage = True          # –ø–µ—Ä—å—è
    beak = True             # –∫–ª—é–≤
    def __init__(self , name , weigth , age ) -> None:
        super().__init__(name , weigth , age)
    def get_spicific_atributes_of_class(self) -> str:
        return f'{self.warm_blooded = } , {self.plumage = } , {self.beak = }'
    

class Elephant(Animal):
    trunk = True # —Ö–æ–±–æ—Ç
    tusks = True # –±–∏–≤–Ω–∏
    type_of_elephant: str                #–°–∞–≤–∞–Ω–Ω—ã–π —Å–ª–æ–Ω –õ–µ—Å–Ω–æ–π —Å–ª–æ–Ω –ò–Ω–¥–∏–π—Å–∫–∏–π —Å–ª–æ–Ω –°—É–º–∞—Ç—Ä–∞–Ω—Å–∫–∏–π —Å–ª–æ–Ω –¶–µ–π–ª–æ–Ω—Å–∫–∏–π —Å–ª–æ–Ω –ë–æ—Ä–Ω–µ–π—Å–∫–∏–π —Å–ª–æ–Ω
    def __init__(self , name , weigth , age , type_of_elephant) -> None:
        self.type_of_elephant = type_of_elephant
        super().__init__( name , weigth , age)
    def get_spicific_atributes_of_class(self) -> str:
        return f'{self.trunk = } , {self.tusks = } , {self.type_of_elephant = }'

# –£—Ä–æ–∫ 10. –û–û–ü. –ù–∞—á–∞–ª–æ
# üìå–î–æ—Ä–∞–±–æ—Ç–∞–µ–º –∑–∞–¥–∞—á–∏ 5-6. –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å-—Ñ–∞–±—Ä–∏–∫—É. 
# –ö–ª–∞—Å—Å –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–∏–ø –∂–∏–≤–æ—Ç–Ω–æ–≥–æ (–Ω–∞–∑–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –∏–∑ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤) –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —ç—Ç–æ–≥–æ —Ç–∏–ø–∞. 
# –í–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞ —Å–æ–∑–¥–∞–π—Ç–µ —ç–∫–∑–µ–º–ø–ª—è—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –∏ –≤–µ—Ä–Ω–∏—Ç–µ –µ–≥–æ –∏–∑ –∫–ª–∞—Å—Å–∞-—Ñ–∞–±—Ä–∏–∫–∏.
class Factori:
    cls:object
    __list_of_save_classes = []
    def Give_me_a_new_element(self, other , *args , **kwargs) -> object:
        rezult = other(*args , **kwargs)
        self.__list_of_save_classes.append(other)
        return rezult
    def print_list_of_save_classes(self):
        return self.__list_of_save_classes
    
f = Factori()
el = f.Give_me_a_new_element(Elephant , 'fgdrg' , 890 , 12 , '–õ–µ—Å–Ω–æ–π —Å–ª–æ–Ω')
print(el.get_spicific_atributes_of_class())
print(f.print_list_of_save_classes)
